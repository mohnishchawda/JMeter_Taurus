
trigger:
- none

variables:
  jmeter_version: 5.5
  cmdrunner_version: 2.2
  jmeter_plugins_manager_version: 1.7

pool:
  vmImage: ubuntu-latest

steps:
- task: PythonScript@0
  inputs:
    scriptSource: 'inline'
    script: |
      import requests as requests
      from io import BytesIO
      from zipfile import ZipFile
      import os
      
      
      def download_jmeter(version):
          response = requests.get('https://dlcdn.apache.org//jmeter/binaries/apache-jmeter-' + version + '.zip')
          zf = ZipFile(BytesIO(response.content))
          zf.extractall('.')
      
      
      def rename_apache_jmeter_folder():
          for folder_or_file in os.listdir():
              if os.path.isdir(folder_or_file) and 'jmeter' in folder_or_file:
                  os.rename(folder_or_file, 'apache_jmeter')
      
      
      def download_cmdrunner(version):
          with open('apache_jmeter/lib/' + 'cmdrunner-' + version + '.jar', 'wb') as file:
              response = requests.get('https://search.maven.org/remotecontent?filepath=kg/apc/cmdrunner/' + version + '/cmdrunner-' + version + '.jar')
              file.write(response.content)
      
      
      def download_jmeter_plugins_manager(version):
          with open('apache_jmeter/lib/ext/' + 'jmeter-plugins-manager-' + version + '.jar', 'wb') as file:
              response = requests.get('https://search.maven.org/remotecontent?filepath=kg/apc/jmeter-plugins-manager/' + version + '/jmeter-plugins-manager-' + version + '.jar')
              file.write(response.content)
      
      
      download_jmeter('5.5')
      rename_apache_jmeter_folder()
      download_cmdrunner('2.2')
      download_jmeter_plugins_manager('1.7')
- task: CmdLine@2
  inputs:
    script: |
      java -cp apache_jmeter/lib/ext/jmeter-plugins-manager-${{ variables.jmeter_plugins_manager_version }}.jar org.jmeterplugins.repository.PluginManagerCMDInstaller
- task: CmdLine@2
  inputs:
    script: |
      mv apache_jmeter/ $HOME/.bzt/
      cd $HOME/.bzt/
      pwd
      ls -lrt
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: 'x64'
- task: CmdLine@2
  inputs:
    script: 'python3 -m pip install --upgrade bzt'
- task: CmdLine@2
  inputs:
    script: 'bzt taurus-config.yml -o modules.jmeter.path=$HOME/.bzt/bin/jmeter -o modules.jmeter.properties="{''jmeter.reportgenerator.overall_granularity'':1000}"'
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    publishLocation: 'pipeline'
- task: PublishTestResults@2
  displayName: Publish Test Results
  inputs:
    testResultsFiles: '**/Load_Test_Taurus.xml'